import("//build/dotfile_settings.gni")

buildconfig = "//build/config/BUILDCONFIG.gn"
script_executable = "python3"

declare_args() {
  v8_enable_test_features = false
  v8_enable_fuzztest = false
  v8_embedder_string = "v8-template"

  clang_use_chrome_plugins = false
  is_component_build = false
  linux_use_bundled_binutils = false
  use_dummy_lastchange = true
  use_sysroot = false
  simple_template_names = false

  # Minimize size of debuginfo in distributed static library.
  line_tables_only = true
  no_inline_line_tables = true
  symbol_level = 1
  use_debug_fission = false

  v8_embedder_string = "-rusty"

  v8_enable_sandbox = false
  v8_enable_javascript_promise_hooks = true
  v8_promise_internal_field_count = 1
  v8_use_external_startup_data = false
  v8_use_snapshot = true

  v8_enable_pointer_compression = false

  v8_imminent_deprecation_warnings = false

  # This flag speeds up the performance of fork/execve on Linux systems for
  # embedders which use it (like Node.js). It works by marking the pages that
  # V8 allocates as MADV_DONTFORK. Without MADV_DONTFORK, the Linux kernel
  # spends a long time manipulating page mappings on fork and exec which the
  # child process doesn't generally need to access.
  v8_enable_private_mapping_fork_optimization = true

  # We prefer embedders to bring their own compression
  v8_use_zlib = false
  v8_enable_snapshot_compression = false

  # Disable handle zapping for performance
  v8_enable_handle_zapping = false

  # Ensure allocation of typed arrays and arraybuffers always goes through
  # the embedder's ArrayBufferAllocator, otherwise small buffers get moved
  # around by the garbage collector but embedders normally want them to have
  # fixed addresses.
  v8_typed_array_max_size_in_heap = 0

  # Historically these always had 2 slots. Keep for compat.
  v8_array_buffer_internal_field_count = 2
  v8_array_buffer_view_internal_field_count = 2

  # Enabling the shared read-only heap comes with a restriction that all
  # isolates running at the same time must be created from the same snapshot.
  # This is problematic for Deno, which has separate "runtime" and "typescript
  # compiler" snapshots, and sometimes uses them both at the same time.
  v8_enable_shared_ro_heap = false

  # V8 11.6 hardcoded an assumption in `mksnapshot` that shared RO heap
  # is enabled. In our case it's disabled so without this flag we can't
  # compile.
  v8_enable_verify_heap = false

  # Enable V8 object print for debugging.
  # v8_enable_object_print = true

  # V8 12.3 added google/fuzztest as a third party dependency.
  # https://chromium.googlesource.com/v8/v8.git/+/d5acece0c9b89b18716c177d1fcc8f734191e1e2%5E%21/#F4
  #
  # This flag disables it.
  v8_enable_fuzztest = false

  # Disable v8::HandleScope LIFO checks.
  # https://chromium-review.googlesource.com/c/v8/v8/+/5110566
  #
  # rusty_v8 scopes are not on the stack.
  v8_enable_v8_checks = false

  use_relative_vtables_abi = false

  v8_depend_on_icu_data_file = false
  icu_copy_icudata_to_root_build_dir = false
}

check_targets = [ "*" ]

# no_check_targets = [
#   # //v8, https://crbug.com/v8/7330
#   "//v8/src/inspector:inspector",  # 20 errors
#   "//v8/test/cctest:cctest_sources",  # 15 errors
#   "//v8/test/unittests:inspector_unittests_sources",  # 2 errors
#   "//v8:cppgc_base",  # 1 error
#   "//v8:v8_internal_headers",  # 11 errors
#   "//v8:v8_libplatform",  # 2 errors
# ]

exec_script_whitelist =
    build_dotfile_settings.exec_script_whitelist + [
      # Whitelist entries for //build should go into
      # //build/dotfile_settings.gni instead, so that they can be shared
      # with other repos. The entries in this list should be only for files
      # in the Chromium repo outside of //build.
      "//build_overrides/build.gni",
      "//chrome/android/webapk/shell_apk/prepare_upload_dir/BUILD.gn",
      "//chrome/version.gni",

      # TODO(dgn): Layer violation but breaks the build otherwise, see
      # https://crbug.com/474506.
      "//clank/java/BUILD.gn",
      "//clank/native/BUILD.gn",
      "//google_apis/BUILD.gn",
      "//printing/BUILD.gn",
      "//remoting/host/installer/linux/BUILD.gn",
      "//remoting/remoting_version.gni",
      "//remoting/host/installer/win/generate_clsids.gni",
      "//tools/grit/grit_rule.gni",
      "//tools/gritsettings/BUILD.gn",

      "//v8/build_overrides/build.gni",
    ]
